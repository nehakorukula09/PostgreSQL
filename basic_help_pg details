Remote connection to a host.
ssh -i /home/Downloads/.../<key> username@hostname  

System administration tasks:
Linux doc
https://github.com/nehakorukula09/MySQL/blob/main/Linux%20Basics%20for%20a%20DB%20Adminstrator

Disk space handling
https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/configuring_and_managing_logical_volumes/managing-lvm-physical-volumes_configuring-and-managing-logical-volumes#overview-of-physical-volumes_managing-lvm-physical-volumes

Systemctl utilities

Reload & Restart prerequisties and confirmation

PostgreSQL:

Create/ ALTER / DROP users
Performance Tuning 
--> Memory config : shared buffers , effective cache size , work_mem (max_connections) and maintenance work_mem
--> Autovacuum settings
--> Logging analysis -> pgbadger (Log parameters tuning)
--> Parameters tuning , which needs restart/ reload
--> pg_hba.conf [priority of access from top to bottom approach]
--> postgresql.comf [priority of access from bottom to top approach]
Automatic failover setup (repmgr)
Backups (pg_basebackup)
PITR (pg_basebackup)
archive settings -> outside the data directory
--> archive_command = 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'  # Unix
-->archive_command = 'copy "%p" "C:\\server\\archivedir\\%f"'  # Windows
-->If archive storage size is a concern, you can use gzip to compress the archive files:
-->archive_command = 'gzip < %p > /mnt/server/archivedir/%f.gz'
-->You will then need to use gunzip during recovery:
-->restore_command = 'gunzip < /mnt/server/archivedir/%f.gz > %p'
Logical Replication setup

Write/Optimize queries
--> EXPLAIN 
--> EXPAIN ANALYSE
--> Indexing (sequential / index-based scan)
--> random_page_cost
--> clustered and non-clustered index

Writing a query using JOINS , subquery , UNION ALL, ORDER BY , GROUP BY , loop using with , case
Query to find missed index and unused index.

==================

Install brew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
/opt/homebrew/bin/brew install  

zshrc issue
cd /opt/homebrew/bin/
PATH=$PATH:/opt/homebrew/bin
cd
touch .zshrc
echo export PATH=$PATH:/opt/homebrew/bin >> .zshrc


==============
Same node replication setup
PG 16 
main - 5432
neha_test - 5434
check postgresql conf parameters
postgres@ip-172-31-93-114:~$ pg_basebackup -p 5432 -U replica -D /var/lib/postgresql/16/neha_test -v -P -R -X stream -c fast -W -h localhost

Different node replication setup
Port 5432 issues on EC2

In Ubuntu , restore the deleted the config files
Ans: By Using pg_createcluster and pg_lsclusters.

================

One more DB cluster creation  on same node.

postgres@ip-172-31-95-248:~$ mkdir nnk_test
postgres@ip-172-31-95-248:~$ chmod 700 nnk_test
postgres@ip-172-31-95-248:~$ pg_createcluster 16 test -D /var/lib/postgresql/16/main
Warning: systemd does not know about the new cluster yet. Operations like "service postgresql start" will not handle it. To fix, run:
  sudo systemctl daemon-reload
Ver Cluster Port Status Owner    Data directory              Log file
16  test    5432 down   postgres /var/lib/postgresql/16/main /var/log/postgresql/postgresql-16-test.log

ubuntu@ip-172-31-95-248:~$ pg_lsclusters 
Ver Cluster Port Status Owner    Data directory              Log file
16  test    5432 online postgres /var/lib/postgresql/16/main /var/log/postgresql/postgresql-16-test.log

===============

Autofailover scenario -> using repmgr
(same and different port)
