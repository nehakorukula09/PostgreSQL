# OS RHEL:

Note: SETUP SSH passwordless connection for the nodes and backup node vice-versa.
ssh-keygen -t rsa

1. Install PostgreSQL:
sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
sudo dnf install -y postgresql15-server
sudo /usr/pgsql-15/bin/postgresql-15-setup initdb
sudo systemctl enable postgresql-15
sudo systemctl start postgresql-15

2. Primary and Replica are set with physical streaming Replication.
3. pgbackrest installation
On Backup node:

sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
sudo dnf install -y postgresql15-server
or
sudo yum install postgresql-libs libssh2

## On All Nodes: ##
[ec2-user@ip-172-31-24-102 ~]$ sudo yum install pgbackrest
Updating Subscription Management repositories.
Unable to read consumer identity

This system is not registered with an entitlement server. You can use "rhc" or "subscription-manager" to register.

Last metadata expiration check: 0:02:59 ago on Tue 10 Sep 2024 01:34:31 AM UTC.
Error: 
 Problem: cannot install the best candidate for the job
  - nothing provides libssh2 needed by pgbackrest-2.53.1-1PGDG.rhel9.x86_64 from pgdg-common
  - nothing provides libssh2.so.1()(64bit) needed by pgbackrest-2.53.1-1PGDG.rhel9.x86_64 from pgdg-common
(try to add '--skip-broken' to skip uninstallable packages or '--nobest' to use not only best candidate packages)

Enable EPEL repo on Red Hat Enterprise Linux 9
First, enable the RHEL provided Code Ready Builder repository with this command:
sudo subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
Next, run the following command to enable EPEL on RHEL 9:
sudo dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
Install libssh2
sudo dnf install libssh2

On Backup node:
1. Install needed directories
sudo mkdir -p /data/backups && sudo chown postgres:postgres /data/backups && sudo chmod 755 /data/backups
sudo mkdir -p -m 770 /var/log/pgbackrest
sudo chown postgres:postgres /var/log/pgbackrest
sudo mkdir -p /etc/pgbackrest
sudo mkdir -p /etc/pgbackrest/conf.d
sudo touch /etc/pgbackrest/pgbackrest.conf
sudo chmod 640 /etc/pgbackrest/pgbackrest.conf
sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf

2. Create configuration files:
cat << EOF | sudo tee -a /etc/pgbackrest/pgbackrest.conf
[global]
compress-type=lz4
process-max=2
start-fast=y
log-level-file=info
spool-path=/var/spool/pgbackrest
backup-standby=y
repo1-retention-full=2
repo-path=/data/backups

[land_registry]
pg1-path=/var/lib/pgsql/15/data
pg1-host=54.175.127.129
pg1-host-user=postgres
pg2-path=/var/lib/pgsql/15/data
pg2-host=18.209.51.157
pg2-host-user=postgres
lock-path=/tmp/pgbackrest/stanza_lock
EOF" 
****Change permissions accordingly.
sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf

On DB nodes:

1. Install needed directories
sudo mkdir -p -m 770 /var/log/pgbackrest
sudo chown postgres:postgres /var/log/pgbackrest
sudo mkdir -p /etc/pgbackrest
sudo mkdir -p /etc/pgbackrest/conf.d
sudo touch /etc/pgbackrest/pgbackrest.conf
sudo chmod 640 /etc/pgbackrest/pgbackrest.conf
sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf

2. Create configuration file:
cat << EOF | sudo tee -a /etc/pgbackrest/pgbackrest.conf
[land_registry]
pg1-path=/var/lib/pgsql/15/data
pg1-host-user=postgres

[global]
log-level-file=detail
repo1-host=54.158.238.43
repo1-host-user=postgres
repo-path=/data/backups
spool-path=/var/spool/pgbackrest
compress-type=lz4
process-max=2
archive-timeout=150
EOF
**** Change permissions accordingly.
sudo chown postgres:postgres /etc/pgbackrest/pgbackrest.conf

4. Create Stanza:
On Backup node:
[postgres@ip-172-31-24-102 .ssh]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=info stanza-create
2024-09-11 00:18:18.542 P00   INFO: stanza-create command begin 2.53.1: --config=/etc/pgbackrest/pgbackrest.conf --exec-id=5069-b82d24c4 --lock-path=/tmp/pgbackrest/stanza_lock --log-level-console=info --log-level-file=info --pg1-host=54.175.127.129 --pg2-host=18.209.51.157 --pg1-host-user=postgres --pg2-host-user=postgres --pg1-path=/var/lib/pgsql/15/data --pg2-path=/var/lib/pgsql/15/data --repo1-path=/data/backups --stanza=land_registry
2024-09-11 00:18:20.450 P00   INFO: stanza-create for stanza 'land_registry' on repo1
2024-09-11 00:18:20.673 P00   INFO: stanza-create command end: completed successfully (2133ms)
On Primary node:
[postgres@ip-172-31-20-100 .ssh]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=info stanza-create
2024-09-11 00:19:47.086 P00   INFO: stanza-create command begin 2.53.1: --config=/etc/pgbackrest/pgbackrest.conf --exec-id=8536-64c9dd16 --log-level-console=info --log-level-file=detail --pg1-path=/var/lib/pgsql/15/data --repo1-host=54.158.238.43 --repo1-host-user=postgres --repo1-path=/data/backups --stanza=land_registry
2024-09-11 00:19:47.694 P00   INFO: stanza-create for stanza 'land_registry' on repo1
2024-09-11 00:19:47.997 P00   INFO: stanza 'land_registry' already exists on repo1 and is valid
2024-09-11 00:19:48.097 P00   INFO: stanza-create command end: completed successfully (1012ms)

5. Change archive settings:
On both Primary & Standby Node:
[postgres@ip-172-31-20-100 .ssh]$ psql -c "ALTER SYSTEM SET archive_command = '/bin/pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry archive-push %p'";
ALTER SYSTEM
[postgres@ip-172-31-28-17 .ssh]$ psql -c "ALTER SYSTEM SET archive_mode='on'";
ALTER SYSTEM
[postgres@ip-172-31-20-100 .ssh]$ psql -c "SELECT pg_reload_conf();"
 pg_reload_conf 
----------------
 t
(1 row)
If modifying archive_mode , then restart or reload should be fine.
sudo systemctl restart postgresql-15

Validate:
[postgres@ip-172-31-20-100 ~]$ psql -c "show archive_mode;"
 archive_mode 
--------------
 on
(1 row)

[postgres@ip-172-31-20-100 ~]$ psql -c "show archive_command;"
                                         archive_command                                         
-------------------------------------------------------------------------------------------------
 /bin/pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry archive-push %p
(1 row)

6.Verify pgbackrest and archive
[postgres@ip-172-31-24-102 .ssh]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=detail check
2024-09-11 00:28:48.536 P00   INFO: check command begin 2.53.1: --config=/etc/pgbackrest/pgbackrest.conf --exec-id=5158-6f624568 --log-level-console=detail --log-level-file=info --pg1-host=54.175.127.129 --pg2-host=18.209.51.157 --pg1-host-user=postgres --pg2-host-user=postgres --pg1-path=/var/lib/pgsql/15/data --pg2-path=/var/lib/pgsql/15/data --repo1-path=/data/backups --stanza=land_registry
2024-09-11 00:28:50.409 P00   INFO: check repo1 (standby)
2024-09-11 00:28:50.410 P00   INFO: switch wal not performed because this is a standby
2024-09-11 00:28:50.411 P00   INFO: check repo1 configuration (primary)
2024-09-11 00:28:50.614 P00   INFO: check repo1 archive for WAL (primary)
2024-09-11 00:28:51.215 P00   INFO: WAL segment 0000000100000001000000B9 successfully archived to '/data/backups/archive/land_registry/15-1/0000000100000001/0000000100000001000000B9-1ef48f4042d07e32ea4cb0ea6a5bacc677f2ec35.lz4' on repo1
2024-09-11 00:28:51.419 P00   INFO: check command end: completed successfully (2885ms)


7. Trigger FULL Backup:
[postgres@ip-172-31-24-102 .ssh]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=info --type=full backup
2024-09-11 00:27:09.950 P00   INFO: backup command begin 2.53.1: --compress-type=lz4 --config=/etc/pgbackrest/pgbackrest.conf --exec-id=5109-9211e8f3 --lock-path=/tmp/pgbackrest/stanza_lock --log-level-console=info --log-level-file=info --pg1-host=54.175.127.129 --pg2-host=18.209.51.157 --pg1-host-user=postgres --pg2-host-user=postgres --pg1-path=/var/lib/pgsql/15/data --pg2-path=/var/lib/pgsql/15/data --process-max=2 --repo1-path=/data/backups --repo1-retention-full=2 --stanza=land_registry --start-fast --type=full
2024-09-11 00:27:12.010 P00   INFO: execute non-exclusive backup start: backup begins after the requested immediate checkpoint completes
2024-09-11 00:27:12.621 P00   INFO: backup start archive = 0000000100000001000000B8, lsn = 1/B8000028
2024-09-11 00:27:12.621 P00   INFO: check archive for prior segment 0000000100000001000000B7
2024-09-11 00:28:17.425 P00   INFO: execute non-exclusive backup stop and wait for all WAL segments to archive
2024-09-11 00:28:17.631 P00   INFO: backup stop archive = 0000000100000001000000B8, lsn = 1/B8000138
2024-09-11 00:28:17.634 P00   INFO: check archive for segment(s) 0000000100000001000000B8:0000000100000001000000B8
2024-09-11 00:28:18.047 P00   INFO: new backup label = 20240911-002711F
2024-09-11 00:28:18.100 P00   INFO: full backup size = 8GB, file total = 1581
2024-09-11 00:28:18.100 P00   INFO: backup command end: completed successfully (68152ms)
2024-09-11 00:28:18.101 P00   INFO: expire command begin 2.53.1: --config=/etc/pgbackrest/pgbackrest.conf --exec-id=5109-9211e8f3 --lock-path=/tmp/pgbackrest/stanza_lock --log-level-console=info --log-level-file=info --repo1-path=/data/backups --repo1-retention-full=2 --stanza=land_registry
2024-09-11 00:28:18.209 P00   INFO: expire command end: completed successfully (109ms)

8. Check status of the Backup.
[postgres@ip-172-31-24-102 .ssh]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=detail info
stanza: land_registry
    status: ok
    cipher: none

    db (current)
        wal archive min/max (15): 0000000100000001000000B7/0000000100000001000000B9

        full backup: 20240911-002711F
            timestamp start/stop: 2024-09-11 00:27:11+00 / 2024-09-11 00:28:17+00
            wal start/stop: 0000000100000001000000B8 / 0000000100000001000000B8
            database size: 8GB, database backup size: 8GB
            repo1: backup set size: 4.2GB, backup size: 4.2GB


crontab scheduling: (Test setup)
Full Backup once in a day at 7:00AM and diff backups 30mins
[postgres@ip-172-31-24-102 .ssh]$ crontab -l
0 7 * * * pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=info --type=full backup
*/30 * * * * pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=info --type=diff backup

Retention settings:
[postgres@ip-172-31-24-102 .ssh]$ cat /etc/pgbackrest/pgbackrest.conf | grep -i retention
repo1-retention-full=2
repo1-retention-diff=2

Expire a Backup:
[postgres@ip-172-31-24-102 land_registry]$ pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --stanza=land_registry --log-level-console=detail expire --set=20240916-070003F

============================
Restore whole cluster:

Prerequisites:
1. PostgreSQL installed.
2. pgbackest installed.
3. passwordless SSH to and from DB node and backup node.

Steps:
1. Stop the currently running postgres and empty the data directory to restore.
2. Trigger Restore:
pgbackrest --config=/etc/pgbackrest/pgbackrest.conf --log-level-console=detail --stanza=land_registry --archive-mode=off restore

Output:
2024-09-17 16:01:20.190 P00   INFO: restore command begin 2.53.1: --archive-mode=off --config=/etc/pgbackrest/pgbackrest.conf --exec-id=1500-e188fd6e --log-level-console=detail --log-level-file=info --pg1-path=/var/lib/pgsql/15/data/ --process-max=2 --repo1-host=54.158.238.43 --repo1-host-user=postgres --repo1-path=/data/backups --spool-path=/var/spool/pgbackrest --stanza=land_registry
2024-09-17 16:01:20.601 P00   INFO: repo1: restore backup set 20240916-070003F_20240917-160003D, recovery will start at 2024-09-17 16:00:03
2024-09-17 16:01:20.601 P00 DETAIL: check '/var/lib/pgsql/15/data' exists
2024-09-17 16:01:20.601 P00 DETAIL: create path '/var/lib/pgsql/15/data/base'
2024-09-17 16:01:20.601 P00 DETAIL: create path '/var/lib/pgsql/15/data/base/1'
2024-09-17 16:01:20.601 P00 DETAIL: create path '/var/lib/pgsql/15/data/base/16388'
2024-09-17 16:01:20.601 P00 DETAIL: create path '/var/lib/pgsql/15/data/base/16394'
..............
2024-09-17 16:01:20.607 P00 DETAIL: create path '/var/lib/pgsql/15/data/pg_wal/archive_status'
2024-09-17 16:01:20.607 P00 DETAIL: create path '/var/lib/pgsql/15/data/pg_xact'
2024-09-17 16:01:36.606 P01 DETAIL: restore file /var/lib/pgsql/15/data/base/16394/24576.3 (1GB, 12.42%) checksum 2e5406f881b73470ad7f39e6b56c7369edc00298
2024-09-17 16:01:37.817 P02 DETAIL: restore file /var/lib/pgsql/15/data/base/16394/24576.2 (1GB, 24.84%) checksum 4c260c5af653a11bae05db7b05de6a6d97603990
2024-09-17 16:01:52.515 P01 DETAIL: restore file /var/lib/pgsql/15/data/base/16394/24576.1 (1GB, 37.26%) checksum 5c924d4589464ae661a4cfa9bfecb0f14c15a074
2024-09-17 16:01:54.657 P02 DETAIL: restore file /var/lib/pgsql/15/data/base/16394/24576 (1GB, 49.68%) checksum f97cf71b95eb8f290dbdad9a3c9346b0b29e7a52
2024-09-17 16:02:02.411 P01 DETAIL: restore file /var/lib/pgsql/15/data/base/16388/16389.3 (1GB, 62.10%) checksum c4a37b65258582d6f3d74d9c932bb4a3cdd9c343
....................
2024-09-17 16:02:31.606 P02 DETAIL: restore file /var/lib/pgsql/15/data/base/1/13432 (0B, 100.00%)
2024-09-17 16:02:31.907 P01 DETAIL: restore file /var/lib/pgsql/15/data/base/1/13427 (0B, 100.00%)
2024-09-17 16:02:32.208 P02 DETAIL: restore file /var/lib/pgsql/15/data/base/1/13422 (0B, 100.00%)
2024-09-17 16:02:32.208 P00   INFO: write updated /var/lib/pgsql/15/data/postgresql.auto.conf
2024-09-17 16:02:32.212 P00 DETAIL: sync path '/var/lib/pgsql/15/data'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base/1'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base/16388'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base/16394'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base/4'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/base/5'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/log'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_commit_ts'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_dynshmem'
...............................
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_twophase'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_wal'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_wal/archive_status'
2024-09-17 16:02:32.214 P00 DETAIL: sync path '/var/lib/pgsql/15/data/pg_xact'
2024-09-17 16:02:32.217 P00   INFO: restore global/pg_control (performed last to ensure aborted restores cannot be started)
2024-09-17 16:02:32.217 P00 DETAIL: sync path '/var/lib/pgsql/15/data/global'
2024-09-17 16:02:32.219 P00   INFO: restore size = 8GB, file total = 1586
2024-09-17 16:02:32.219 P00   INFO: restore command end: completed successfully (72031ms)
3. Start the Service.

============================
Restore single Database:

On primary:
postgres=# CREATE DATABASE land_sales WITH  template land_registry;
CREATE DATABASE
.........





