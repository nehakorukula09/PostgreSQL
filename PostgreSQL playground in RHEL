User adding and deleting in Linux:
userdel
sudo userdel <username> -r
useradd
sudo useradd <username> [ Optional --home /home/username]

pg_stat_statements installation:
FATAL:  could not access file "pg_stat_statements": No such file or directory
yum install postgresql-contrib
sudo yum install postgresql13-contrib
postgres=# CREATE EXTENSION pg_stat_statements;
CREATE EXTENSION
postgres=# ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';
ALTER SYSTEM
postgres=# \q

Installation on Linux(RHEL):

# Install the repository RPM:
sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm

# Disable the built-in PostgreSQL module:
sudo dnf -qy module disable postgresql

# Install PostgreSQL:
sudo dnf install -y postgresql13-server

# Optionally initialize the database and enable automatic start:
sudo /usr/pgsql-13/bin/postgresql-13-setup initdb
sudo systemctl enable postgresql-13
sudo systemctl start postgresql-13

========================

On Primary : 
postgres=# CREATE USER replica_user WITH REPLICATION PASSWORD 'replicapgsql';
CREATE ROLE

postgresql.conf:
listen_addresses = '*'
Restart the server

Some more replication setup parameters:
wal_level= replica
hot_standby=on


pg_hba.conf
host	all,replication	replica_user	3.90.162.54/32		md5
Reload

Check connectivity from standby:
[ec2-user@ip-172-31-17-195 ~]$ /usr/pgsql-13/bin/psql -h <primary host> -p 5432 -U replica_user -d postgres
Password for user replica_user: 
psql (13.15)
Type "help" for help.

postgres=>

On Standby:
Stop the server
[ec2-user@ip-172-31-17-195 ~]$ sudo systemctl stop postgresql-13
[postgres@ip-172-31-17-195 ~]$ rm -rf /var/lib/pgsql/13/data/*

[postgres@ip-172-31-17-195 ~]$ /usr/pgsql-13/bin/pg_basebackup -D /var/lib/pgsql/13/data/ -h 34.230.10.154 -p 5432 -U replica_user -Xs -R -P -v
Password: 
pg_basebackup: initiating base backup, waiting for checkpoint to complete
pg_basebackup: checkpoint completed
pg_basebackup: write-ahead log start point: 0/2000028 on timeline 1
pg_basebackup: starting background WAL receiver
pg_basebackup: created temporary replication slot "pg_basebackup_32367"
24412/24412 kB (100%), 1/1 tablespace                                         
pg_basebackup: write-ahead log end point: 0/2000100
pg_basebackup: waiting for background process to finish streaming ...
pg_basebackup: syncing data to disk ...
pg_basebackup: renaming backup_manifest.tmp to backup_manifest
pg_basebackup: base backup completed

Start the server
[ec2-user@ip-172-31-17-195 ~]$ sudo systemctl start postgresql-13
[ec2-user@ip-172-31-17-195 ~]$ ps -ef| grep post
postgres   32293       1  0 23:29 ?        00:00:00 /usr/pgsql-13/bin/postmaster -D /var/lib/pgsql/13/data/
postgres   32294   32293  0 23:29 ?        00:00:00 postgres: logger 
postgres   32295   32293  0 23:29 ?        00:00:00 postgres: startup recovering 000000010000000000000003
postgres   32296   32293  0 23:29 ?        00:00:00 postgres: checkpointer 
postgres   32297   32293  0 23:29 ?        00:00:00 postgres: background writer 
postgres   32298   32293  0 23:29 ?        00:00:00 postgres: stats collector 
postgres   32299   32293  0 23:29 ?        00:00:00 postgres: walreceiver streaming 0/3000060
ec2-user   32305    3989  0 23:30 pts/0    00:00:00 grep --color=auto post

====================
Failover

Validate replication on slave:
SELECT pg_is_in_recovery() AS is_slave,
pg_last_wal_receive_lsn() AS receive,
pg_last_wal_replay_lsn() AS replay,
pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() AS synced,
(
EXTRACT(EPOCH FROM now()) -
EXTRACT(EPOCH FROM pg_last_xact_replay_timestamp())
)::int AS lag;

 is_slave |  receive  |  replay   | synced | lag 
----------+-----------+-----------+--------+-----
 t        | 0/3000148 | 0/3000148 | t      |    
(1 row)

--------------
pgbadger installation:

RHEL
[ec2-user@ip-172-31-28-157 ~]$ sudo yum install pgbadger
Error: 
 Problem: cannot install the best candidate for the job
  - nothing provides perl-Text-CSV_XS needed by pgbadger-12.4-1PGDG.rhel9.noarch from pgdg-common
(try to add '--skip-broken' to skip uninstallable packages or '--nobest' to use not only best candidate packages)
Fix: sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
or sudo yum install perl perl-devel
and then sudo yum install pgbadger

Error: 
 Problem: package pgbadger-12.4-1PGDG.rhel9.noarch from pgdg-common requires perl-Text-CSV_XS, but none of the providers can be installed
  - cannot install the best candidate for the job
  - nothing provides perl(:MODULE_COMPAT_5.26.3) needed by perl-Text-CSV_XS-1.40-1.el8.x86_64 from epel
  - nothing provides libperl.so.5.26()(64bit) needed by perl-Text-CSV_XS-1.40-1.el8.x86_64 from epel
(try to add '--skip-broken' to skip uninstallable packages or '--nobest' to use not only best candidate packages)

===============
pgbackrest 

RHEL : sudo yum install libxml2-devel lz4-devel
sudo yum install pgbackrest --nobest
(try to add '--skip-broken' to skip uninstallable packages or '--nobest' to use not only best candidate packages)

Primary
/etc/pgbackrest.conf 
[demo_stanza]
pg1-path=/var/lib/pgsql/12/data
pg1-port=5433

[global]
repo1-path=/var/lib/pgbackrest

Create the pgBackRest repository
sudo mkdir -p /var/lib/pgbackrest
sudo chmod 750 /var/lib/pgbackrest
sudo chown postgres:postgres /var/lib/pgbackrest

Configure archive settings
archive_command = 'pgbackrest --stanza=demo archive-push %p'
archive_mode = on
log_filename = 'postgresql.log'
max_wal_senders = 3
wal_level = replica

postgres=# ALTER SYSTEM SET archive_command = 'pgbackrest --stanza=demo_stanza archive-push %p';
ALTER SYSTEM
postgres=# ALTER SYSTEM SET archive_mode = 'on';
ALTER SYSTEM
postgres=# show log_filename ; show max_wal_senders ; show wal_level;
   log_filename    
-------------------
 postgresql-%a.log
(1 row)

 max_wal_senders 
-----------------
 10
(1 row)

 wal_level 
-----------
 replica
(1 row)

Restart Database after changing settings: sudo systemctl restart postgresql-12.service

Config archive-push to use a lower compression level
[global:archive-push]
compress-level=3
#[demo_stanza:archive-push]
#compress-level=3

Configure retention to 2 full backups
It is important to use a long, random passphrase for the cipher key. A good way to generate one is to run: openssl rand -base64 48.
[global]
repo1-path=/var/lib/pgbackrest
repo1-cipher-pass=********
repo1-cipher-type=aes-256-cbc
repo1-retention-full=2

Create Stanza
[postgres@ip-172-31-17-195 ~]$ pgbackrest --stanza=demo_stanza --log-level-console=info stanza-create
2024-07-15 23:22:49.135 P00   INFO: stanza-create command begin 2.46: --exec-id=423852-ffcdb7b0 --log-level-console=info --pg1-path=/var/lib/pgsql/15/data --pg1-port=5433 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo_stanza
2024-07-15 23:22:49.740 P00   INFO: stanza-create for stanza 'demo_stanza' on repo1
2024-07-15 23:22:49.753 P00   INFO: stanza-create command end: completed successfully (621ms)

Check the Stanza
[postgres@ip-172-31-17-195 ~]$ pgbackrest --stanza=demo_stanza --log-level-console=info check
2024-07-15 23:24:35.131 P00   INFO: check command begin 2.46: --exec-id=423944-6bb22ca7 --log-level-console=info --pg1-path=/var/lib/pgsql/15/data --pg1-port=5433 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo_stanza
2024-07-15 23:24:35.735 P00   INFO: check repo1 configuration (primary)
2024-07-15 23:24:35.937 P00   INFO: check repo1 archive for WAL (primary)
ERROR: [082]: WAL segment 000000010000000000000025 was not archived before the 60000ms timeout
       HINT: check the archive_command to ensure that all options are correct (especially --stanza).
       HINT: check the PostgreSQL server log for errors.
       HINT: run the 'start' command if the stanza was previously stopped.
2024-07-15 23:25:35.938 P00   INFO: check command end: aborted with exception [082]

Errors:
ERROR: [082]: WAL segment 000000010000000000000025 was not archived before the 60000ms timeout
Check for DB logs for errors
In our case archive_command needs to be corrected as per hint.

[postgres@ip-172-31-17-195 ~]$ pgbackrest --stanza=demo_stanza --log-level-console=info check
2024-07-15 23:30:51.942 P00   INFO: check command begin 2.46: --exec-id=424131-950a42ff --log-level-console=info --pg1-path=/var/lib/pgsql/15/data --pg1-port=5433 --repo1-cipher-pass=<redacted> --repo1-cipher-type=aes-256-cbc --repo1-path=/var/lib/pgbackrest --stanza=demo_stanza
2024-07-15 23:30:52.547 P00   INFO: check repo1 configuration (primary)
2024-07-15 23:30:52.748 P00   INFO: check repo1 archive for WAL (primary)
2024-07-15 23:30:52.849 P00   INFO: WAL segment 000000010000000000000028 successfully archived to '/var/lib/pgbackrest/archive/demo_stanza/15-1/0000000100000000/000000010000000000000028-d2572c1070d2171df219cad28c8d439bc49a0890.gz' on repo1
2024-07-15 23:30:52.849 P00   INFO: check command end: completed successfully (910ms)

Trigger Backup:
pgbackrest --stanza=demo_stanza --log-level-console=info backup
pgbackrest --stanza=demo_stanza --log-level-console=info backup --type=diff
pgbackrest --stanza=demo_stanza --log-level-console=info backup --type=incr

Schedule using cron job

Logs for analysis:
[postgres@ip-172-31-17-195 demo_stanza]$ cd /var/log/pgbackrest/
[postgres@ip-172-31-17-195 pgbackrest]$ ls -l
total 24
-rw-r-----. 1 postgres postgres 5035 Jul 15 23:35 demo_stanza-archive-push-async.log
-rw-r-----. 1 postgres postgres 4105 Jul 15 23:35 demo_stanza-backup.log
-rw-r-----. 1 postgres postgres 1182 Jul 15 23:35 demo_stanza-expire.log
-rw-r-----. 1 postgres postgres 1268 Jul 15 23:22 demo_stanza-stanza-create.log
[postgres@ip-172-31-17-195 pgbackrest]$ view demo_stanza-backup.log

